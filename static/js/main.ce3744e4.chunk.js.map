{"version":3,"sources":["@aui/util/AUIStyle.tsx","@aui/app/plugins lazy /^/.//.*//index/.ts$/ groupOptions: {} namespace object","@aui/app/plugins/PluginLoader.tsx","@aui/app/Dashboard.tsx","@aui/app/Home.tsx","@aui/app/App.tsx","serviceWorker.js","index.tsx","@aui/util/AUITheme.tsx","@aui/util/AUITypography.tsx","@aui/common/Table/table.tsx","@aui/common/StatusText/StatusText.tsx","@aui/common/AccordionTable/AccordionTable.tsx","@aui/common/I18nLoader/I18nLoader.tsx"],"names":["standardText","labelGray","successGreen","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","PluginLoader","useState","components","setComponents","importComponent","plugin","lazy","name","useEffect","a","componentPromises","plugins","Component","key","all","loadPlugins","fallback","Dashboard","Home","to","App","withAUITheme","language","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","theme","createMuiTheme","palette","common","black","white","primary","light","main","dark","contrastText","secondary","typography","fontFamily","join","fontSize","props","CssBaseline","useStyles","makeStyles","basic","fontWeight","color","standardLabel","sectionTitle","lineHeight","sectionSubtitle","sectionText","sectionTextGray","AUITypography","kind","customClassName","className","rest","classes","Typography","classNames","undefined","tableNoData","textAlign","width","minWidth","progress","marginTop","AUITable","instance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","Table","TableHead","headerGroup","TableRow","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","TableBody","length","CircularProgress","row","getRowProps","cells","cell","getCellProps","Status","statusGreen","statusDefault","StatusText","status","PROCESSING","right","float","sectionTitleText","marginLeft","sectionSubtitleText","lastRunText","AccordionTable","icon","title","tableTitle","addNewButtonText","columns","data","expanded","panelExpanded","setPanelExpanded","tableProps","useTable","useAUITable","Accordion","onChange","AccordionSummary","expandIcon","aria-controls","src","alt","height","i18n","_","AccordionDetails","Grid","container","spacing","item","xs","Button","variant","setupI18n","I18nLoader","children"],"mappings":"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","file":"static/js/main.ce3744e4.chunk.js","sourcesContent":["export const standardText = 'rgba(0, 0, 0, 0.87)' // #000000de\nexport const labelGray = 'rgba(0, 0, 0, 0.54)' // #0000008a\nexport const successGreen = 'rgb(76, 175, 80)' // Green[500]","var map = {\n\t\"./nodeGroups/index.ts\": [\n\t\t200,\n\t\t3\n\t],\n\t\"./processGroups/index.ts\": [\n\t\t201,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 192;\nmodule.exports = webpackAsyncContext;","import React, { lazy, useState, useEffect, Suspense } from 'react'\nimport plugins from './plugin.json'\n\nexport const PluginLoader = () => {\n    const [components, setComponents] = useState<any>([])\n\n    const importComponent = (plugin: any) => \n        lazy(() => \n            import(`./${plugin.name}/index.ts`)\n        )\n\n    useEffect(() => {\n        async function loadPlugins() {\n            const componentPromises = plugins.map(async plugin => {\n                const Component: any = await importComponent(plugin)\n                return <Component key={plugin.name} />\n            })\n\n            Promise.all(componentPromises).then(setComponents)\n        }\n\n        loadPlugins()\n    }, [])\n\n    return (\n        <>\n        <div>Plugins that can be added via configuration</div>\n        <Suspense fallback='Loading views...'>\n            <div>{components}</div>\n        </Suspense>\n        </>\n    )\n}","import React from 'react'\nimport { PluginLoader } from \"./plugins/PluginLoader\";\n\nexport const Dashboard = () => {\n    return (\n        <PluginLoader />\n    )\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport const Home = () => {\n    return (\n        <>\n            <div>Sample application to demonstrate usage of common component library</div>\n            <ul>\n                <li><NavLink to=\"/process\">Process Group</NavLink></li>\n                <li><NavLink to=\"/node\">Node Group</NavLink></li>\n                <li><NavLink to=\"/dashboard\">Dashboard to demo plugin behavior</NavLink></li>\n            </ul>\n        </>\n    )\n}","import React from 'react';\nimport { withAUITheme } from '@aui/util'\nimport { I18nLoader } from '@aui/common'\nimport { Route, HashRouter } from 'react-router-dom'\nimport { Dashboard } from './Dashboard'\nimport { Home } from './Home'\n\nfunction _App() {\n  return (\n    <I18nLoader language=\"en\">\n      <HashRouter basename=\"/\">\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n      </HashRouter>\n    </I18nLoader>\n  )\n}\n\nexport const App = withAUITheme(_App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'typeface-roboto'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './@aui/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createMuiTheme, MuiThemeProvider, CssBaseline } from '@material-ui/core'\nimport React from 'react'\n\nconst theme = createMuiTheme({\n    palette: {\n        common: {\n            black: '#000',\n            white: '#fff'\n        },\n        primary: {\n            light: '#FFAB91',\n            main: '#FF5722',\n            dark: '#D84315',\n            contrastText: '#fff'\n        },\n        secondary: {\n            light: '#5393ff',\n            main: '#2979ff',\n            dark: '#1c54b2',\n            contrastText: '#FFF'\n        }\n    },\n    typography: {\n        fontFamily: ['Roboto', 'Helvetica', 'Arial', 'sans-serif'].join(','),\n        fontSize: 14,\n    }\n})\n\nexport const withAUITheme = <P extends {}>(Component: React.ComponentType<P>) => {\n    const WithAUITheme: React.FC<P> = (props) => (\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Component {...props} />\n        </MuiThemeProvider>\n    )\n    return WithAUITheme\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport { standardText, labelGray } from './AUIStyle'\nimport { TypographyProps, Typography } from '@material-ui/core';\nimport classNames from 'classnames'\n\nconst useStyles = makeStyles({\n    basic: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        color: standardText,\n    },\n    standardLabel: {\n        fontSize: '0.75rem',\n        fontWeight: 400,\n        color: labelGray\n    },\n    sectionTitle: {\n        fontSize: '1.5rem',\n        fontWeight: 600,\n        lineHeight: 1\n    },\n    sectionSubtitle: {\n        fontSize: '1rem',\n        fontWeight: 600,\n        lineHeight: 1\n    },\n    sectionText: {\n        fontSize: '1rem',\n        fontWeight: 450,\n        lineHeight: 1\n    },\n    sectionTextGray: {\n        fontSize: '0.8rem',\n        fontWeight: 400,\n        lineHeight: 0.8,\n        color: labelGray\n    }\n})\n\ntype Kind = keyof ReturnType<typeof useStyles>\n\ninterface KindProps{\n    kind?: Kind\n}\n\nexport const AUITypography: React.FC<KindProps & TypographyProps> = ({\n    kind,\n    className: customClassName,\n    ...rest\n}) => {\n    const classes = useStyles({})\n    return (\n        <Typography\n            className={classNames(classes.basic, kind ? classes[kind] : undefined, customClassName)}\n            {...rest}\n        />\n    )\n}","import React, { PropsWithChildren, ReactElement } from 'react'\nimport { useTable, TableOptions, TableInstance } from 'react-table'\nimport { Table, TableHead, TableBody, TableRow, TableCell, CircularProgress, makeStyles } from '@material-ui/core';\n\nexport function useAUITable<T extends object>(tableProps: PropsWithChildren<TableOptions<T>>) {\n    const { columns, data } = tableProps\n    const instance = useTable<T>({\n        columns,\n        data\n    })\n    return instance\n}\n\nexport type TableProps<D extends object> = {\n    instance: TableInstance<D>\n}\n\nconst useStyles = makeStyles({\n    tableNoData: {\n        textAlign: 'center',\n        width: '100%',\n        minWidth: '100%'\n    },\n    progress: {\n        marginTop: '30px'\n    }\n})\n\nexport function AUITable<T extends object>({instance}: PropsWithChildren<TableProps<T>>): ReactElement {\n    const classes = useStyles({})\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = instance\n    return (\n        <Table {...getTableProps()}>\n            <TableHead>\n            {headerGroups.map(headerGroup => (\n                <TableRow {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                    <TableCell\n                    {...column.getHeaderProps()}\n                    >\n                    {column.render('Header')}\n                    </TableCell>\n                ))}\n                </TableRow>\n            ))}\n            </TableHead>\n            <TableBody {...getTableBodyProps()}>\n                {\n                    (!rows || !rows.length) &&\n                    <div className={classes.tableNoData}>\n                        <CircularProgress color=\"primary\" className={classes.progress} />\n                    </div>\n                }\n                {rows.map(row => {\n                    prepareRow(row)\n                    return (\n                    <TableRow {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                        return (\n                            <TableCell\n                            {...cell.getCellProps()}\n                            >\n                            {cell.render('Cell')}\n                            </TableCell>\n                        )\n                        })}\n                    </TableRow>\n                    )\n                })}\n            </TableBody>\n        </Table>\n    )\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport { successGreen, standardText } from '@aui/util/AUIStyle'\n\nexport interface IStatusText {\n    status: string\n}\n\nexport enum Status {\n    STOPPED = 'Stopped',\n    PROCESSING = 'Processing',\n    COMPLETED = 'Completed'\n}\n\nconst useStyles = makeStyles({\n    statusGreen: {\n        color: successGreen\n    },\n    statusDefault: {\n        color: standardText\n    }\n})\nexport const StatusText: React.FC<IStatusText> = ({status}) => {\n    const classes = useStyles({})\n    return (\n        <span className={status === Status.PROCESSING ? classes.statusGreen : classes.statusDefault}>{status}</span>\n    )\n}","import React, { useState } from 'react'\nimport { useAUITable, AUITable } from '@aui/common/Table/table'\nimport { Accordion, AccordionSummary, AccordionDetails, Button, Grid, makeStyles } from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { Trans } from '@lingui/macro'\nimport { AUITypography } from '@aui/util'\nimport { MessageDescriptor } from '@lingui/core'\nimport { i18n } from '@aui/common'\n\n\nconst useStyles = makeStyles({\n    right: {\n      float: 'right'\n    },\n    sectionTitleText: {\n      marginLeft: '40px',\n      marginTop: '15px'\n    },\n    sectionSubtitleText: {\n      marginLeft: '15px'\n    },\n    lastRunText: {\n      marginTop: '10px'\n    }\n  })\n\nexport interface IAccordionTable{\n    icon: string\n    title: MessageDescriptor\n    tableTitle: MessageDescriptor\n    addNewButtonText: MessageDescriptor\n    columns: any\n    data: any\n    expanded?: boolean\n}\n\nexport const AccordionTable: React.FC<IAccordionTable> = ({\n    icon,\n    title,\n    tableTitle,\n    addNewButtonText,\n    columns,\n    data,\n    expanded = true\n}) => {\n    const classes = useStyles({})\n    const [panelExpanded, setPanelExpanded] = useState(expanded )\n    const instance = useAUITable<any>({\n        columns,\n        data\n      })\n\n    return (\n        <Accordion expanded={panelExpanded} onChange={() => setPanelExpanded(!panelExpanded)}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon color=\"primary\" />}\n            aria-controls=\"expand-panel-content\"\n            id=\"expand-panel-header\"\n          >\n            <img \n              src={icon} \n              alt='Apache Nifi'\n              width=\"120\"\n              height=\"50\"\n            />\n            <AUITypography kind=\"sectionTitle\" className={classes.sectionTitleText}>\n              {i18n._(title)}\n            </AUITypography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Grid container spacing={3}>\n              <Grid item xs={6}>\n                <AUITypography kind=\"sectionSubtitle\" className={classes.sectionSubtitleText}>\n                  {i18n._(tableTitle)}\n                </AUITypography>\n              </Grid>\n              <Grid item xs={6} >\n                <Button color=\"primary\" className={classes.right}>\n                  <Trans>Open NiFi Dashboard</Trans>\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                <AUITable instance={instance} />\n              </Grid>\n              <Grid item xs={3}>\n                <Button variant=\"outlined\" color=\"primary\">\n                  {i18n._(addNewButtonText)}\n                </Button>\n              </Grid>\n            </Grid>\n          </AccordionDetails>\n      </Accordion>\n    )\n}","import React from 'react'\nimport { setupI18n } from '@lingui/core'\nimport { I18nProvider } from '@lingui/react'\n\nexport const i18n = setupI18n()\n\ninterface I18nProps{\n    language: string\n}\n\nexport const I18nLoader: React.FC<I18nProps> = ({language, children}) => {\n    return (\n        <I18nProvider language={language} i18n={i18n}>\n            {children}\n        </I18nProvider>\n    )\n}"],"sourceRoot":""}